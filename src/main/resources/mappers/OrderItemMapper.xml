<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awakeyoyoyo.dao.OrderItemMapper">
  <resultMap id="BaseResultMap" type="com.awakeyoyoyo.entity.OrderItem">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_no" javaType="java.lang.Long" jdbcType="BIGINT" />
      <arg column="product_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="product_quantity" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="product_title" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="product_no" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="product_size" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="express_name" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="express_phone" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="express_pwd" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, user_id, order_no, product_name, product_quantity, product_title, product_no, 
    product_size, express_name, express_phone, express_pwd
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from order_item
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from order_item
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.awakeyoyoyo.entity.OrderItem">
    insert into order_item (id, user_id, order_no, 
      product_name, product_quantity, product_title, 
      product_no, product_size, express_name, 
      express_phone, express_pwd)
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNo,jdbcType=BIGINT}, 
      #{productName,jdbcType=VARCHAR}, #{productQuantity,jdbcType=INTEGER}, #{productTitle,jdbcType=INTEGER}, 
      #{productNo,jdbcType=INTEGER}, #{productSize,jdbcType=VARCHAR}, #{expressName,jdbcType=VARCHAR}, 
      #{expressPhone,jdbcType=VARCHAR}, #{expressPwd,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.awakeyoyoyo.entity.OrderItem">
    insert into order_item
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="userId != null">
        user_id,
      </if>
      <if test="orderNo != null">
        order_no,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="productQuantity != null">
        product_quantity,
      </if>
      <if test="productTitle != null">
        product_title,
      </if>
      <if test="productNo != null">
        product_no,
      </if>
      <if test="productSize != null">
        product_size,
      </if>
      <if test="expressName != null">
        express_name,
      </if>
      <if test="expressPhone != null">
        express_phone,
      </if>
      <if test="expressPwd != null">
        express_pwd,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null">
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productQuantity != null">
        #{productQuantity,jdbcType=INTEGER},
      </if>
      <if test="productTitle != null">
        #{productTitle,jdbcType=INTEGER},
      </if>
      <if test="productNo != null">
        #{productNo,jdbcType=INTEGER},
      </if>
      <if test="productSize != null">
        #{productSize,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null">
        #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="expressPhone != null">
        #{expressPhone,jdbcType=VARCHAR},
      </if>
      <if test="expressPwd != null">
        #{expressPwd,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.awakeyoyoyo.entity.OrderItem">
    update order_item
    <set>
      <if test="userId != null">
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNo != null">
        order_no = #{orderNo,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="productQuantity != null">
        product_quantity = #{productQuantity,jdbcType=INTEGER},
      </if>
      <if test="productTitle != null">
        product_title = #{productTitle,jdbcType=INTEGER},
      </if>
      <if test="productNo != null">
        product_no = #{productNo,jdbcType=INTEGER},
      </if>
      <if test="productSize != null">
        product_size = #{productSize,jdbcType=VARCHAR},
      </if>
      <if test="expressName != null">
        express_name = #{expressName,jdbcType=VARCHAR},
      </if>
      <if test="expressPhone != null">
        express_phone = #{expressPhone,jdbcType=VARCHAR},
      </if>
      <if test="expressPwd != null">
        express_pwd = #{expressPwd,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awakeyoyoyo.entity.OrderItem">
    update order_item
    set user_id = #{userId,jdbcType=INTEGER},
      order_no = #{orderNo,jdbcType=BIGINT},
      product_name = #{productName,jdbcType=VARCHAR},
      product_quantity = #{productQuantity,jdbcType=INTEGER},
      product_title = #{productTitle,jdbcType=INTEGER},
      product_no = #{productNo,jdbcType=INTEGER},
      product_size = #{productSize,jdbcType=VARCHAR},
      express_name = #{expressName,jdbcType=VARCHAR},
      express_phone = #{expressPhone,jdbcType=VARCHAR},
      express_pwd = #{expressPwd,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>