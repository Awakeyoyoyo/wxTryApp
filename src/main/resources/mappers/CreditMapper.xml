<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.awakeyoyoyo.dao.CreditMapper">
  <resultMap id="BaseResultMap" type="com.awakeyoyoyo.entity.Credit">
    <constructor>
      <idArg column="id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="open_id" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="user_credit" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="order_times" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="cencal_times" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="charge_times" javaType="java.lang.Integer" jdbcType="INTEGER" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    id, open_id, user_credit, order_times, cencal_times, charge_times
  </sql>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from gotodo_credit
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from gotodo_credit
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.awakeyoyoyo.entity.Credit">
    insert into gotodo_credit (id, open_id, user_credit, 
      order_times, cencal_times, charge_times
      )
    values (#{id,jdbcType=INTEGER}, #{openId,jdbcType=INTEGER}, #{userCredit,jdbcType=INTEGER}, 
      #{orderTimes,jdbcType=INTEGER}, #{cencalTimes,jdbcType=INTEGER}, #{chargeTimes,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.awakeyoyoyo.entity.Credit">
    insert into gotodo_credit
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="openId != null">
        open_id,
      </if>
      <if test="userCredit != null">
        user_credit,
      </if>
      <if test="orderTimes != null">
        order_times,
      </if>
      <if test="cencalTimes != null">
        cencal_times,
      </if>
      <if test="chargeTimes != null">
        charge_times,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=INTEGER},
      </if>
      <if test="openId != null">
        #{openId,jdbcType=INTEGER},
      </if>
      <if test="userCredit != null">
        #{userCredit,jdbcType=INTEGER},
      </if>
      <if test="orderTimes != null">
        #{orderTimes,jdbcType=INTEGER},
      </if>
      <if test="cencalTimes != null">
        #{cencalTimes,jdbcType=INTEGER},
      </if>
      <if test="chargeTimes != null">
        #{chargeTimes,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.awakeyoyoyo.entity.Credit">
    update gotodo_credit
    <set>
      <if test="openId != null">
        open_id = #{openId,jdbcType=INTEGER},
      </if>
      <if test="userCredit != null">
        user_credit = #{userCredit,jdbcType=INTEGER},
      </if>
      <if test="orderTimes != null">
        order_times = #{orderTimes,jdbcType=INTEGER},
      </if>
      <if test="cencalTimes != null">
        cencal_times = #{cencalTimes,jdbcType=INTEGER},
      </if>
      <if test="chargeTimes != null">
        charge_times = #{chargeTimes,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.awakeyoyoyo.entity.Credit">
    update gotodo_credit
    set open_id = #{openId,jdbcType=INTEGER},
      user_credit = #{userCredit,jdbcType=INTEGER},
      order_times = #{orderTimes,jdbcType=INTEGER},
      cencal_times = #{cencalTimes,jdbcType=INTEGER},
      charge_times = #{chargeTimes,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="ReduceUserCrediByuserId" parameterType="integer">
    UPDATE gotodo_credit
    SET user_credit=user_credit-1
    WHERE open_id=#{userId}
  </update>
  <update id="addCancelByuserId">
     UPDATE gotodo_credit
    SET cancel_times=cancel_times+1
    WHERE open_id=#{userId}
  </update>
  <update id="addChargeByuserId">
    UPDATE gotodo_credit
    SET charge_times=chagre_times+1
    WHERE open_id=#{userId}
  </update>
  <update id="addOrderByuserId">
    UPDATE gotodo_credit
    SET order_times=order_times+1
    WHERE open_id=#{userId}
  </update>
  <select id="selectByOpenId" resultMap="BaseResultMap" parameterType="integer">
    SELECT <include refid="Base_Column_List"></include>
    FROM gotodo_credit
    WHERE open_id=#{openId}
  </select>
  <select id="selectAll" resultMap="BaseResultMap" parameterType="integer">
    SELECT <include refid="Base_Column_List"></include>
    FROM gotodo_credit
  </select>

</mapper>